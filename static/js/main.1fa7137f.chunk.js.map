{"version":3,"sources":["img/mark.svg","img/cloud1.svg","img/cloud2.svg","img/cloud3.svg","action.js","components/Rating.js","components/PlaceList.js","components/Map.js","components/mapStyles.js","components/Nearby.js","components/Search.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["module","exports","setSelected","marker","console","log","type","location","placeName","Rating","props","stars","parseInt","Math","round","rating","starsArray","i","push","a","length","map","star","index","className","key","Place","styled","div","PlaceList","dispatch","useDispatch","placeId","onClick","libraries","mapContainerStyle","width","height","options","styles","disableDefaultUI","Map","useLoadScript","googleMapsApiKey","process","isLoaded","loadError","markers","useSelector","state","center","selected","constructor","Array","zoom","defaultVisible","icon","url","vector","scaledSize","window","google","maps","Size","position","lat","lng","onCloseClick","Nearby","useState","spining","SetSpining","listPlaces","SetlistPlaces","Setlocation","searchText","food","searchFood","places","fetch","then","res","json","results","googlePlace","place","geometry","place_id","name","setMarkers","catch","error","useEffect","xhr","XMLHttpRequest","open","onload","response","JSON","parse","this","responseText","setLocation","send","style","sunAnimation","keyframes","MainPage","mouseMove","evt","transFormX","floor","clientX","transFormY","clientY","document","querySelectorAll","forEach","e","transform","getElementById","addEventListener","id","src","require","alt","preventDefault","App","Boolean","hostname","match","initialState","foodList","navigator","geolocation","getCurrentPosition","pos","crd","coords","latitude","longitude","appFood","action","random","store","createStore","subscribe","getState","ReactDOM","render","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1fa7137f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mark.f9b6fa60.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud1.dc881fa0.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud2.73806bd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud3.5ba04788.svg\";","export const GET_RANDOM_FOOD = 'GET_RANDOM_FOOD'\nexport const SET_GEOLOCATION = 'SET_GEOLOCATION'\nexport const SET_MARKERS = 'SET_MARKERS';\nexport const SET_SELECTED = 'SET_SELECTED';\n\nexport const getRandomFood = () => {\n    return {type:GET_RANDOM_FOOD}\n}\nexport const setLocation = (location) => {\n    return {type:SET_GEOLOCATION,location:location}\n}\n\nexport const setMarkers = (markers) => {\n    return { type:SET_MARKERS,markers:markers}\n}\n\nexport const setSelected = (marker) =>{\n    console.log('-------',marker)\n    return { type:SET_SELECTED,location:marker.location,placeName: marker.placeName}\n}","import React from 'react';\n\nconst Rating = (props) => {\n    \n        const stars = parseInt(Math.round(props.rating));\n        const starsArray = [];\n\n        for(let i = 0;i<stars;i++){\n            starsArray.push('star--yellow')\n        }\n        for(let a = starsArray.length; a < 5;a++ ){\n            starsArray.push('star--empty')\n        }\n      \n        \n    \n    return (\n        <>\n        { starsArray && \n            starsArray.map((star,index)=>(\n                <div className={\"star \"+star} key={index}></div>\n                ))\n        }\n        </>\n    )\n}\n\nexport default Rating;","import React from 'react';\nimport styled from 'styled-components';\nimport Rating from './Rating';\nimport { useDispatch } from 'react-redux';\nimport { setSelected }from '../action';\n\nconst Place = styled.div`\n\n    display: inline-block;\n    width: calc((100% - 2rem) /2);\n    border: 1px solid #eee;\n    padding: 1rem;\n    border-radius: 1rem;\n    margin-right: .5rem;\n    margin-bottom: 1rem;\n    box-sizing: border-box;\n    background:#fff;\n    @media (max-width: 575px) {\n      width: calc(100% - 1rem);\n      margin:0 auto 1rem;\n    }\n  h3{\n    text-overflow : ellipsis;\n    white-space : nowrap;\n    overflow: hidden;\n  }\n  .star {\n  position: relative;\n  \n  display: inline-block;\n  width: 0;\n  height: 0;\n  \n  margin-left: .9em;\n  margin-right: .9em;\n  margin-bottom: 1.2em;\n  border-right:  .3em solid transparent;\n  border-bottom: .7em  solid #FC0;\n  border-left:   .3em solid transparent;\n  font-size: 8px;\n  \n  &:before, &:after {\n    content: '';\n    display: block;\n    width: 0;\n    height: 0;\n    position: absolute;\n    top: .6em;\n    left: -1em;\n    border-right:  1em solid transparent;\n    border-bottom: .7em  solid #FC0;\n    border-left:   1em solid transparent;\n    transform: rotate(-35deg);\n  }\n  &:after {  \n    transform: rotate(35deg);\n  }\n}\n  .star--empty{\n    border-bottom: .7em  solid #ccc;\n    &:before, &:after{\n      border-bottom: .7em  solid #ccc;\n    }\n  }\n`;\nconst PlaceList = (props)=> {\n\n    \n  const dispatch = useDispatch();\n    return(\n        <Place key={props.placeId} onClick={()=>dispatch(setSelected(props))}>\n            <h3>{props.placeName}</h3>\n            <Rating rating={props.rating} key={props.placeId}></Rating>\n        </Place>\n    )\n}\n\nexport default PlaceList;","import React, { useState } from 'react'\nimport { \n    GoogleMap, \n    useLoadScript ,\n    Marker,\n    InfoWindow\n} from '@react-google-maps/api';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { setSelected }from '../action';\nimport mapStyles from './mapStyles';\nimport vector from '../img/mark.svg';\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n    width: '60%',\n    height: '400px'\n}\n\nconst options = {\n    styles:mapStyles,\n    disableDefaultUI: true\n}\nexport default function  Map(){\n\n    const { isLoaded,loadError} = useLoadScript({\n        googleMapsApiKey:process.env.REACT_APP_MAP_API_KEY,\n        libraries,\n    })\n\n    const markers = useSelector(state => state.markers);\n    const center = useSelector(state => state.location);\n    const selected = useSelector(state => state.selected);\n    const dispatch = useDispatch();\n    \n\n    if(loadError) return 'Error loading maps';\n    if(!isLoaded) return 'Loading maps';\n    if(markers && markers.constructor === Array && markers.length === 0) return null\n    \n    return(\n       \n       <GoogleMap   mapContainerStyle={mapContainerStyle}\n                    zoom={15}\n                    center={center}\n                    options={options}\n                    defaultVisible={false}>\n            {markers.map(marker => \n                <Marker \n                        key={marker.placeId}\n                        icon={{ url: vector,\n                                scaledSize: new window.google.maps.Size(30, 30)\n                            }}\n                position={{ lat: marker.location.lat, lng:marker.location.lng}}\n                onClick={()=>dispatch(setSelected(marker))}\n                \n            />)}\n            \n            {selected ? (<InfoWindow    position={{lat:selected.location.lat,lng:selected.location.lng}}\n                                        onCloseClick={()=>dispatch(setSelected(null))}>\n                    <div>\n                        <h4>{selected.placeName}</h4>\n                    </div>\n                </InfoWindow>) : null}\n       </GoogleMap>\n    )\n}","export default [\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"simplified\"\n            },\n            {\n                \"color\": \"#5b6571\"\n            },\n            {\n                \"lightness\": \"35\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative.neighborhood\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#f3f4f4\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape.man_made\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"weight\": 0.9\n            },\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.park\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#b6dbcb\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#faebb1\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"labels\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway.controlled_access\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"simplified\"\n            },\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"labels\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#d5eaf5\"\n            }\n        ]\n    }\n]","import React ,{ useState, useEffect }from 'react';\nimport PlaceList from './PlaceList';\nimport Map from './Map';\nimport { useSelector ,useDispatch} from 'react-redux';\nimport { setLocation, setMarkers } from '../action'\n\nconst Nearby = () =>{\n    const [spining,SetSpining] = useState(null);\n    const [listPlaces,SetlistPlaces] = useState([]);\n    const [location, Setlocation] = useState(null);\n\n\n    const searchText = useSelector(state => state.food);\n    const markers = useSelector(state => state.markers);\n    const dispatch = useDispatch();\n\n    const getGeolocation = () => {\n        const geolocationUrl = 'https://www.googleapis.com/geolocation/v1/geolocate?key='+process.env.REACT_APP_MAP_API_KEY;\n        (function() {\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', geolocationUrl);\n            xhr.onload = function () {\n                var response = JSON.parse(this.responseText);\n                Setlocation('location='+response.location.lat+','+response.location.lng);\n                dispatch(setLocation({lat:response.location.lat,lng:response.location.lng}))\n            }\n            xhr.send();\n        })();\n    \n    }\n\n    \n    const searchFood = ()=>{\n        \n        SetSpining(true);\n        const places = [];\n        const url = 'https://cors-anywhere.herokuapp.com/'+'https://maps.googleapis.com/maps/api/place/nearbysearch/json?'+location+'&radius=3000&type=restaurant&keyword='+searchText+'&key='+process.env.REACT_APP_MAP_API_KEY;\n        \n        fetch(url)\n        .then(res=> res.json())\n        .then(res=>{\n            for (let googlePlace of res.results) {\n                var place = {};\n                var myLat = googlePlace.geometry.location.lat;\n                var myLong = googlePlace.geometry.location.lng;\n                var location = {\n                    lat: myLat,\n                    lng: myLong,\n                };\n                place['rating'] = googlePlace.rating;\n                place['location'] = location;\n                place['placeId'] = googlePlace.place_id;\n                place['placeName'] = googlePlace.name;\n                places.push(place);\n            }\n            SetlistPlaces(places);\n            dispatch(setMarkers(places))\n            SetSpining(false);\n        })\n        .catch(error => { \n            console.log(error);\n            SetSpining(false);\n        });\n    }\n    useEffect(()=>{\n        getGeolocation()\n    },[])\n\n    useEffect(()=>{\n        if(markers && markers.length !== 0){\n            searchFood()\n        }\n    },[searchText])\n\n    \n    return(\n        <>\n            <button style={{\"marginLeft\":\"15px\"}} onClick={()=>searchFood()}>推薦我店面</button>\n            <div style={{\"padding\":\"2rem 0\"}}>\n                {spining && (<div>Loading....</div>)}\n                <div className=\"Place_result\">\n                    <div className=\"Place_result_list\">\n                    { listPlaces && \n                        listPlaces.map((place)=>(\n                            <PlaceList  placeName={place.placeName}\n                                        location={place.location} \n                                        rating={place.rating}\n                                        key={place.placeId}>\n                            </PlaceList>\n                            ))\n                    }\n                    </div>\n                    \n                        <Map></Map>\n                </div>\n                \n            </div>\n            </>\n    )\n}\n\nexport default Nearby;","import React, { useEffect } from 'react';\n\nimport { getRandomFood } from '../action'\nimport { useSelector ,useDispatch} from 'react-redux';\nimport Nearby from './Nearby';\n\nimport styled ,{ keyframes }from 'styled-components'\n\n\n\nconst Search = ({className}) => {\n    const searchText = useSelector(state => state.food);\n    const dispatch = useDispatch()\n    \n    const mouseMove = (evt) => {\n       \n            const transFormX = Math.floor(evt.clientX / 20);\n            const transFormY = Math.floor(evt.clientY / 20);\n            const clouds =  document.querySelectorAll('.cloudAnime');\n            clouds.forEach((e)=>{\n                e.style.transform =`translate(-${transFormX}px,-${transFormY}px)`;\n            })\n            \n    }\n    useEffect(()=>{\n        document.getElementById(\"sky\").addEventListener('mousemove', mouseMove);\n    })\n    return(\n        <div className={className}>\n            <section className={className+\"_wrap\"} id=\"sky\">\n                <h1 className={className+\"_title\"}>佛系找食</h1>\n                <h3 className={className+\"_subTitle\"}>總是想不到要吃什麼嗎？<br/>\n                不如就隨緣吧！</h3>\n                <div className={className+\"_sun\"}></div>\n                <div className={className+\"_clouds cloud1 cloudAnime\"}>\n                <img src={require('../img/cloud1.svg')} alt=\"\" />      \n                </div>\n                <div className={className+\"_clouds cloud2 cloudAnime\"}>\n                <img src={require('../img/cloud2.svg')} alt=\"\"/>      \n                </div>\n                <div className={className+\"_clouds cloud3 cloudAnime\"}>\n                <img src={require('../img/cloud3.svg')} alt=\"\"/>      \n                </div>\n            </section>\n            {\n            !searchText &&\n            <button onClick={(evt)=>{ \n                evt.preventDefault();\n                dispatch(getRandomFood())   \n            }}>隨緣尋找\n            </button>}\n\n            {searchText && \n                <>\n                <h2>就決定吃<span style={{'color':'#ffbb00'}}>{searchText}</span>了!</h2>\n                <button onClick={(evt)=>{ \n                    evt.preventDefault();\n                    dispatch(getRandomFood()) }}>讓我再重抽一次</button>\n                <Nearby />\n                </>\n            }\n\n            \n        </div>\n        \n    )\n   \n}\nconst sunAnimation = keyframes`\n     0% { box-shadow: 0 0 20px 0 #fae348; }\n    100% { box-shadow: 0 0 80px 0 #fae348;}\n`\nconst MainPage = styled(Search)`\n\n    color:#9b9b9b;\n    font-weight:100;\n    &_wrap{\n        overflow: hidden;\n        position:relative;\n    }\n    &_title{\n        font-size: 3rem;\n        font-weight:100;\n    }\n    &_subTitle{\n        font-size: 1rem;\n        font-weight:300;\n    }\n    &_sun{\n        width: 250px;\n        height: 250px;\n        border-radius:50%;\n        box-shadow: 0 0 80px 0 #fae348;\n        margin: 50px auto 75px; \n        background-image: radial-gradient(circle at 50% 50%, #f5f3d6, #fffab8 71%);\n        animation: ${sunAnimation} 2s infinite linear alternate;\n    }\n    &_clouds{\n        position: absolute;\n      \n        opacity: .8;\n        &.cloud1{\n            top: calc(50% + 50px);\n            left: calc(50% + 150px);\n        }\n        &.cloud2{\n            top: calc(50% - 100px);\n            right: calc(50% + 150px);\n        }\n        &.cloud3{\n            top: 10%;\n            right: 10%;\n            z-index:-1;\n        }\n    }\n   \n    button{\n        appearance: none;\n        min-width: 150px;\n        background:transparent;\n        padding:.5rem 1.5rem;\n        border-radius: 2rem;\n        border: solid 1px #9b9b9b;\n        color:#9b9b9b;\n        outline:0;\n        cursor: pointer;\n        &:hover{\n            background: #9b9b9b;\n            color:#fff;\n        }\n        &:active,&:hover{\n            outline:0;\n        }\n    }\n    .Place_result{\n        display:flex;\n        align-items:top;\n        &_list{\n            width:40%;\n            max-height:400px;\n            overflow-y: scroll;\n        }\n    }\n\n`\nexport  default MainPage;","import React from 'react';\nimport './App.css';\nimport MainPage from './components/Search';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <MainPage></MainPage>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GET_RANDOM_FOOD, SET_GEOLOCATION ,SET_MARKERS,SET_SELECTED} from './action';\n\n\nconst  success = (pos)=> {\n    var crd = pos.coords;\n    \n    return {\n        lat:crd.latitude,\n        lng:crd.longitude\n    }\n   \n  };\n\nconst initialState = {\n    food: '',\n    foodList:['pizza','麵','雞肉飯','日式料理','拉麵','速食','泰式','義大利麵',\n                '早午餐','韓式','咖喱飯','火鍋','自助餐','美式漢堡','港式',\n                '河粉','滷味','炸雞排','粥','沙拉','牛排'\n            ],\n    location: window.navigator.geolocation.getCurrentPosition(success),\n    markers:[],\n    selected:null\n}\nfunction appFood (state = initialState, action){\n    switch (action.type){\n        case GET_RANDOM_FOOD:\n            return{\n                ...state,\n                food:state.foodList[Math.floor(Math.random() * state.foodList.length)]\n            }\n        case SET_GEOLOCATION:\n            return{\n                ...state,\n                location:{...action.location\n                }\n            }\n        case SET_MARKERS:\n            return{\n                ...state,\n                markers:[...action.markers]\n            }\n        case SET_SELECTED:\n            return{\n                ...state,\n                selected:{\n                    location:action.location,\n                    placeName:action.placeName\n                }\n            }\n        default:\n            return state;\n    }\n}\n\nexport default appFood;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport appFood from './reducer';\n\nlet store = createStore(appFood);\n// console.log(store.getState())\n\nconst unsubscribe = store.subscribe(() =>\n  console.log(store.getState())\n)\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}